# ===============================
# ðŸ§± Etapa 1 - Build com Maven
# ===============================
FROM maven:3.9.9-eclipse-temurin-17 AS build
ARG TARGET_DIR=dspace-installer
WORKDIR /app

RUN useradd -m dspace && \
    mkdir /install && \
    chown -R dspace:dspace /install /app
USER dspace

# Copia o cÃ³digo do DSpace
ADD --chown=dspace:dspace . /app/

ENV MAVEN_FLAGS="-P-test-environment -Denforcer.skip=true -Dcheckstyle.skip=true -Dlicense.skip=true -Dxml.skip=true"
RUN mvn --no-transfer-progress package ${MAVEN_FLAGS} && \
  mv /app/dspace/target/${TARGET_DIR}/* /install && \
  mvn clean
# Remove the server webapp to keep image small.
RUN rm -rf /install/webapps/server/


# ===============================
# ðŸ§° Etapa 2 - InstalaÃ§Ã£o com Ant
# ===============================
FROM eclipse-temurin:17-jdk-jammy AS ant_build

ENV DSPACE_HOME=/dspace \
    DSPACE_SRC=/dspace-src \
    JAVA_OPTS="-Xmx2g"

RUN apt-get update && \
    apt-get install -y ant && \
    rm -rf /var/lib/apt/lists/*

COPY --from=build /install ${DSPACE_SRC}
WORKDIR ${DSPACE_SRC}

RUN ant init_installation update_configs update_code update_webapps


# ===============================
# ðŸš€ Etapa 3 - ExecuÃ§Ã£o (Imagem final)
# ===============================
FROM eclipse-temurin:17-jdk-jammy

ENV DSPACE_INSTALL=/dspace
WORKDIR $DSPACE_INSTALL

# Copia a instalaÃ§Ã£o pronta
COPY --from=ant_build /dspace /dspace

# Expor portas
EXPOSE 8080

# Metadados da imagem
LABEL org.opencontainers.image.version="9.2" \
      org.opencontainers.image.title="DSpace 9.2 Backend URI" \
      org.opencontainers.image.vendor="URI - Universidade Regional Integrada"

# Give java extra memory (2GB)
ENV JAVA_OPTS="-Xmx2g -Xms1g -XX:MaxMetaspaceSize=512m"

# On startup, run DSpace Runnable JAR
ENTRYPOINT java $JAVA_OPTS -jar webapps/server-boot.jar --dspace.dir=$DSPACE_INSTALL
